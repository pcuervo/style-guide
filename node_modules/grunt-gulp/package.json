{
  "name": "grunt-gulp",
  "description": "Run gulp tasks through grunt",
  "version": "0.1.0",
  "homepage": "https://github.com/shama/grunt-gulp",
  "author": {
    "name": "Kyle Robinson Young",
    "email": "kyle@dontkry.com",
    "url": "http://dontkry.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/shama/grunt-gulp.git"
  },
  "bugs": {
    "url": "https://github.com/shama/grunt-gulp/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/shama/grunt-gulp/blob/master/LICENSE-MIT"
    }
  ],
  "engines": {
    "node": ">= 0.10.0"
  },
  "files": [
    "tasks",
    "LICENSE-MIT"
  ],
  "scripts": {
    "test": "grunt test"
  },
  "dependencies": {
    "gulp": "~3.2.4",
    "gulp-concat": "~2.1.7"
  },
  "devDependencies": {
    "grunt": "~0.4.2",
    "grunt-contrib-clean": "~0.5.0",
    "grunt-contrib-nodeunit": "~0.2.2",
    "grunt-contrib-jshint": "~0.8.0",
    "gulp-coffee": "~1.2.5"
  },
  "peerDependencies": {
    "grunt": "~0.4.2"
  },
  "keywords": [
    "gruntplugin"
  ],
  "readme": "# grunt-gulp [![Build Status](https://travis-ci.org/shama/grunt-gulp.png?branch=master)](https://travis-ci.org/shama/grunt-gulp)\n\n> Run [gulp](http://gulpjs.com/) tasks through declarative [Grunt](http://gruntjs.com/) config\n\n## Getting Started\nThis plugin requires Grunt `~0.4.2`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-gulp --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-gulp');\n```\n\n## Examples\nA simple example that concats a list of javascript files in the `lib/` folder to `dist/bundle.js` with gulp:\n\n``` js\ngrunt.initConfig({\n  gulp: {\n    'dist/bundle.js': ['lib/*.js'],\n  },\n});\n```\n\nBut you're probably using this task because you want to use gulp tasks. So lets extend the example to compile coffeescript using [gulp-coffee](https://npmjs.org/package/gulp-coffee):\n\n``` js\ngrunt.initConfig({\n  gulp: {\n    options: {\n      tasks: function(stream) {\n        return stream.pipe(require('gulp-coffee')());\n      },\n    },\n    'dist/bundle.js': ['lib/*.coffee'],\n  },\n});\n```\n\nThis task supports all of the ways [Grunt can be configured](http://gruntjs.com/configuring-tasks). Such as with `expand: true`; this example will compile each coffeescript file within the `lib/` folder into the `dist/` folder:\n\n``` js\ngrunt.initConfig({\n  gulp: {\n    target: {\n      options: {\n        tasks: function(stream) { return stream.pipe(require('gulp-coffee')()); },\n      },\n      expand: true,\n      cwd: 'lib/',\n      src: '*.coffee',\n      dest: 'dist/',\n    },\n  },\n});\n```\n\nOr maybe you prefer a more gulp-like imperative config but still want to integrate with your Grunt build. You can bypass the Grunt config all together but still integrate:\n\n``` js\nvar gulp = require('gulp');\nvar coffee = require('gulp-coffee');\nvar concat = require('gulp-concat');\n\ngrunt.initConfig({\n  gulp: {\n    myown: function() {\n      var dest = gulp.dest('dist/');\n      dest.on('end', function() {\n        grunt.log.ok('All done!');\n      });\n      return gulp.src('lib/*.coffee')\n        .pipe(coffee())\n        .pipe(concat('bundle.js'))\n        .pipe(dest);\n    },\n  },\n});\n```\n\n### Options\n\n#### options.tasks\nType: `Function`  \nDefault value: `null`\n\nA function to pipe gulp tasks into your stream. Such as with `gulp-coffee` and `gulp-uglify`:\n\n``` js\ngrunt.initConfig({\n  gulp: {\n    target: {\n      options: {\n        tasks: function(stream) {\n          var coffee = require('gulp-coffee')({ bare: true }).on('error', grunt.log.error);\n          var minify = require('gulp-uglify')();\n          return stream.pipe(coffee).pipe(minify);\n        },\n      },\n      src: ['lib/*.coffee'],\n      dest: 'dist/bundle.min.js',\n    },\n  },\n});\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## Release History\n* 0.1.0 - initial release\n",
  "readmeFilename": "README.md",
  "_id": "grunt-gulp@0.1.0",
  "dist": {
    "shasum": "ecdf67cdc539d360ea917fa7c599de2d4e1e9ac6",
    "tarball": "http://registry.npmjs.org/grunt-gulp/-/grunt-gulp-0.1.0.tgz"
  },
  "_from": "grunt-gulp@",
  "_npmVersion": "1.3.14",
  "_npmUser": {
    "name": "shama",
    "email": "kyle@dontkry.com"
  },
  "maintainers": [
    {
      "name": "shama",
      "email": "kyle@dontkry.com"
    }
  ],
  "directories": {},
  "_shasum": "ecdf67cdc539d360ea917fa7c599de2d4e1e9ac6",
  "_resolved": "https://registry.npmjs.org/grunt-gulp/-/grunt-gulp-0.1.0.tgz"
}
